---------------------------------------------
--quest達o 1
produtos :: [Produto]
produtos = [("Cerveja",3.99),("Vodka", 15.50),("Agua",2.00),("Energetico",8.00),("Salgadinho",3.50),("Conhaque",25.00),("Balalaika",8.00),("Paiero",0.70),("Refrigerante",7.00),("Bala",0.10)]

---------------------------------------------
--quest達o 2
repete :: a -> Int -> [a]
repete x n = replicate n x

index :: Eq a => a -> [a]-> Maybe Int
index _ [] = Nothing
index x l = calcula x l 0
  where 
    calcula :: Eq a => a-> [a] -> Int -> Maybe Int
    calcula _ [] _ = Nothing
    calcula x (h:t) i
      |x /= h = calcula x t (i+1)
      |otherwise = Just i
      
elemento :: [a] -> Int -> Maybe a
elemento l n
   |n > length l = Nothing
   |otherwise = Just (l !! n)
   
---------------------------------------------
--quest達o 3
addProduto :: [Produto] -> Produto -> [Produto]
addProduto lista produto = lista ++ [produto]

remProduto :: [Produto] -> String -> [Produto]
remProduto (h:t) x
  | x == fst h = t
  | otherwise = remProduto t x
  
buscaProduto :: [Produto] -> String -> Maybe Produto
buscaProduto [] _ = Nothing
buscaProduto (h:t) x
  | x == fst h = Just h
  | otherwise = buscaProduto t x


---------------------------------------------
--quest達o 4
alinhaEsq :: String -> Char -> Int -> String
alinhaEsq lista c n = conc c (n - (length lista)) ++ lista

conc :: Char -> Int -> String
conc c n = replicate n c


alinhaDir :: String -> Char -> Int -> String
alinhaDir lista c n = lista ++ conc c (n - (length lista)) 
