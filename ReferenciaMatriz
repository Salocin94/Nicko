
--questão 2
repete :: a -> Int -> [a]
repete x n = replicate n x

index :: Eq a => a -> [a]-> Maybe Int
index _ [] = Nothing
index x l = calcula x l 0
  where 
    calcula :: Eq a => a-> [a] -> Int -> Maybe Int
    calcula _ [] _ = Nothing
    calcula x (h:t) i
      |x /= h = calcula x t (i+1)
      |otherwise = Just i
      
elemento :: [a] -> Int -> Maybe a
elemento l n
   |n > length l = Nothing
   |otherwise = Just (l !! n)
---------------------------------------------
--questão 3



---------------------------------------------
--questão 4
alinhaEsq :: String -> Char -> Int -> String
alinhaEsq lista c n = conc c (n - (length lista)) ++ lista

conc :: Char -> Int -> String
conc c n = replicate n c


alinhaDir :: String -> Char -> Int -> String
alinhaDir lista c n = lista ++ conc c (n - (length lista)) 
